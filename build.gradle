// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = '1.5.31'
        compose_version = '1.0.1'
    }
    repositories {
        google()
        jcenter()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {

        classpath "com.github.ben-manes:gradle-versions-plugin:0.42.0"//Dependencies.tools_gradleversions
        classpath "com.android.tools.build:gradle:7.0.4"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"//Dependencies.tools_kotlin
        classpath Dependencies.kotlin_extensions
        classpath 'com.google.gms:google-services:4.3.8'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.6.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.18"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        gradlePluginPortal()
    }
}


subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            apply plugin: "com.github.ben-manes.versions"

            def apikeyPropertiesFile = rootProject.file("apikey.properties")
            def apikeyProperties = new Properties()
            apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

            android {
                buildToolsVersion Config.buildTools
                compileSdkVersion Config.compileSdk

                defaultConfig {
                    minSdkVersion Config.minSdk
                    targetSdkVersion Config.targetSdk
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                    buildConfigField("String", "MOVIE_DB_KEY", apikeyProperties['MOVIE_DB_KEY'])
                }

                compileOptions {
                    sourceCompatibility Config.javaVersion
                    targetCompatibility Config.javaVersion
                }
                sourceSets {
                    main.java.srcDirs += 'src/main/kotlin'
                }
                kotlinOptions {
                    jvmTarget = "1.8"
                    useIR = true
                }

                buildFeatures {
                    viewBinding true
                    compose true
                }

                composeOptions {
                    kotlinCompilerExtensionVersion '1.1.1'
                    kotlinCompilerVersion '1.5.21'
                }

                packagingOptions {
                    exclude 'META-INF/DEPENDENCIES'
                    exclude 'META-INF/LICENSE'
                    exclude 'META-INF/LICENSE.txt'
                    exclude 'META-INF/license.txt'
                    exclude 'META-INF/NOTICE'
                    exclude 'META-INF/NOTICE.txt'
                    exclude 'META-INF/notice.txt'
                    exclude 'META-INF/ASL2.0'
                    exclude("META-INF/*.kotlin_module")
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}